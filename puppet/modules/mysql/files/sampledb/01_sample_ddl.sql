create database if not exists paas;
USE paas;

CREATE TABLE IF NOT EXISTS ITEM ( 
	ITEM_ID CHAR(16) NOT NULL,
	ITEM_NAME VARCHAR(100) NOT NULL,
	MAKER_CODE CHAR(10) NOT NULL,
	PRICE DECIMAL(10) NOT NULL,
	DELETE_FLG CHAR(1) DEFAULT 0 NOT NULL
)
;
CREATE TABLE IF NOT EXISTS MAKER ( 
	MAKER_CODE CHAR(10) NOT NULL,
	MAKER_NAME VARCHAR(50) NOT NULL,
	DELETE_FLG CHAR(1) DEFAULT 0 NOT NULL
)
;

CREATE TABLE IF NOT EXISTS ORDER_DETAIL ( 
	ORDER_ID DECIMAL(10) NOT NULL,
	DETAIL_NO DECIMAL(2) NOT NULL,
	ITEM_ID CHAR(16) NOT NULL,
	AMOUNT DECIMAL(2) NOT NULL
)
;

CREATE TABLE IF NOT EXISTS ORDER_SUMMARY (
	SUMMARY_DATE CHAR(8) NOT NULL,
	ORDERS_COUNT DECIMAL(10) NOT NULL,
	ORDERS_SUM DECIMAL(38) NOT NULL,
	APPROVAL_COUNT DECIMAL(10) NOT NULL,
	APPROVAL_SUM DECIMAL(38) NOT NULL,
	DENIAL_COUNT DECIMAL(10) NOT NULL,
	DENIAL_SUM DECIMAL(38) NOT NULL,
	YET_COUNT DECIMAL(10) NOT NULL,
	YET_SUM DECIMAL(38) NOT NULL
)
;

CREATE TABLE IF NOT EXISTS PURCHASE_ORDER ( 
	ORDER_ID DECIMAL(10) NOT NULL,
	ORDER_DATE DATE NOT NULL,
	ORDER_COMMENT VARCHAR(255),
	APPLICANT_ID VARCHAR(20) NOT NULL,
	STATUS_CODE CHAR(2) NOT NULL,
	APPROVER_ID VARCHAR(20),
	APPROVED_DATE DATE,
	LAST_UPDATE_DATE DATE NOT NULL
)
;

CREATE TABLE IF NOT EXISTS ROLE ( 
	ROLE_ID CHAR(10) NOT NULL,
	ROLE_NAME VARCHAR(50) NOT NULL,
	DELETE_FLG CHAR(1) DEFAULT 0 NOT NULL
)
;

CREATE TABLE IF NOT EXISTS ROLE_FUNCTION ( 
	ROLE_ID CHAR(10) NOT NULL,
	FUNCTION_ID VARCHAR(10) NOT NULL
)
;

CREATE TABLE IF NOT EXISTS STATUS ( 
	STATUS_CODE CHAR(2) NOT NULL,
	STATUS_NAME VARCHAR(50) NOT NULL
)
;

CREATE TABLE IF NOT EXISTS USERS ( 
	USER_ID VARCHAR(20) NOT NULL,
	PASSWORD CHAR(32)
)
;

CREATE TABLE IF NOT EXISTS USER_PROFILE ( 
	USER_ID VARCHAR(20) NOT NULL,
	MAIL_ADDRESS VARCHAR(255) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	FIRST_NAME VARCHAR(50) NOT NULL,
	ROLE_ID CHAR(10)
)
;


ALTER TABLE ITEM ADD CONSTRAINT PK_ITEM 
	PRIMARY KEY (ITEM_ID)
;

ALTER TABLE MAKER ADD CONSTRAINT PK_MAKER 
	PRIMARY KEY (MAKER_CODE)
;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT PK_PURCHASE_ORDER 
	PRIMARY KEY (ORDER_ID)
;

ALTER TABLE ORDER_DETAIL ADD CONSTRAINT PK_ORDER_DETAIL 
	PRIMARY KEY (ORDER_ID, DETAIL_NO)
;

ALTER TABLE ROLE ADD CONSTRAINT PK_ROLE 
	PRIMARY KEY (ROLE_ID)
;

ALTER TABLE ROLE_FUNCTION ADD CONSTRAINT PK_ROLE_FUNCTION 
	PRIMARY KEY (ROLE_ID, FUNCTION_ID)
;

ALTER TABLE STATUS ADD CONSTRAINT PK_STATUS 
	PRIMARY KEY (STATUS_CODE)
;

ALTER TABLE USERS ADD CONSTRAINT PK_USERS 
	PRIMARY KEY (USER_ID)
;

ALTER TABLE USER_PROFILE ADD CONSTRAINT PK_USER_PROFILE 
	PRIMARY KEY (USER_ID)
;
ALTER TABLE ORDER_SUMMARY ADD CONSTRAINT PK_ORDER_SUMMARY 
	PRIMARY KEY (SUMMARY_DATE)
;




ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_MAKER 
	FOREIGN KEY (MAKER_CODE) REFERENCES MAKER (MAKER_CODE)
ON DELETE CASCADE
;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT FK_PO_STATUS 
	FOREIGN KEY (STATUS_CODE) REFERENCES STATUS (STATUS_CODE)
ON DELETE CASCADE
;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT FK_PO_USERS_APPLICANT 
	FOREIGN KEY (APPLICANT_ID) REFERENCES USERS (USER_ID)
;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT FK_PO_USERS_APPROVER 
	FOREIGN KEY (APPROVER_ID) REFERENCES USERS (USER_ID)
;

ALTER TABLE ORDER_DETAIL ADD CONSTRAINT FK_ORDER_DETAIL_ITEM 
	FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
ON DELETE CASCADE
;

ALTER TABLE ORDER_DETAIL ADD CONSTRAINT FK_ORDER_DETAIL_PURCHASE_ORDER 
	FOREIGN KEY (ORDER_ID) REFERENCES PURCHASE_ORDER (ORDER_ID)
ON DELETE CASCADE
;

ALTER TABLE ROLE_FUNCTION ADD CONSTRAINT FK_ROLE_FUNCTION_ROLE 
	FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
ON DELETE CASCADE
;

ALTER TABLE USER_PROFILE ADD CONSTRAINT FK_USER_PROFILE_ROLE 
	FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
;

ALTER TABLE USER_PROFILE ADD CONSTRAINT FK_USER_PROFILE_USERS 
	FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
ON DELETE CASCADE
;

GRANT ALL ON paas.* TO paasuser IDENTIFIED BY 'password';
GRANT ALL ON paas.* TO paasuser@localhost IDENTIFIED BY 'password';
